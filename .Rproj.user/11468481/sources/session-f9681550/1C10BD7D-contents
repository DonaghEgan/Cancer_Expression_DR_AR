## library
library(DESeq2); library(tidyverse); library(msigdbr); library(fgsea); library(pheatmap)
library(RColorBrewer); library(readxl); library(writexl); library(ggpubr)
library(ggsci);library(biomaRt)
library(openxlsx)

dna_rna_id <- read_delim("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/metadata/DNA_to_RNA_ID.txt")

match_indices <- match(colnames(counts), dna_rna_id$RNA_ID)

# Replace the column names of df1 with the corresponding values from the second column (New) of df2
colnames(counts)[!is.na(match_indices)] <- dna_rna_id$DNA_ID[match_indices[!is.na(match_indices)]]

# Reorder the rownames of meta_tme_scale to match the colnames of counts
meta_tme_scale <- meta_tme_scale[match(colnames(counts), rownames(meta_tme_scale)), ]

# Check if they now match
all(rownames(meta_tme_scale) == colnames(counts))  # Should return TRUE

pal_colors <- rev(pal_npg()(3)[c(2,1,3)])

## Set the working directory
setwd("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT")

## counts + meta_data
counts <- readRDS("counts.Rds")
meta_data <- readRDS("meta_data_v2.Rds")

## overlap counts and meta and remove non-assigned samples
meta_data <- meta_data[rownames(meta_data) %in% colnames(counts), ]## load data 
meta_data <- meta_data[!meta_data$group == "NA",]

## consensusTME output
consensus_tme <- data.frame(t(readRDS("consensus_TME.Rds")))

## unify meta and and patients with rna seq 
counts <- counts[, colnames(counts) %in% rownames(meta_data)]

## collapse covariates - immune cells  
APC_CELLS <- c("Dendritic_cells" , "Monocytes","B_cells",
               "Macrophages",  "Macrophages_M1", "Macrophages_M2")

NON_APC_CELLS <- c("Cytotoxic_cells", "Eosinophils", "Mast_cells", "NK_cells","Neutrophils",
                   "T_cells_CD4", "T_cells_CD8", "T_cells_gamma_delta", "T_regulatory_cells",
                   "Plasma_cells")
## average
consensus_tme$APC_CELLS <- rowMeans(consensus_tme[, APC_CELLS, drop=FALSE]) 
consensus_tme$NON_APC_CELLS <- rowMeans(consensus_tme[, NON_APC_CELLS, drop = FALSE]) 

## add tme to meta data 
meta_tme <- merge(consensus_tme, meta_data, by = 0) %>% column_to_rownames("Row.names")

## scale variables in model
meta_tme_scale <- scale(meta_tme[,c(1:21,48), drop=F])
meta_tme_scale <- merge(meta_tme_scale, meta_tme[,"group", drop =F], by =0) %>% column_to_rownames("Row.names")

## create deseq object with model design
dds <- DESeqDataSetFromMatrix(countData = counts,
                              colData = meta_tme_scale,
                              design = ~ group + tumorPurity + group:tumorPurity + APC_CELLS + NON_APC_CELLS + Endothelial + Fibroblasts)
## filtering low counts
keep <- rowSums(counts(dds) >=  10) >= 30 
dds <- dds[keep,]
table(keep)

## run comparison  
dds <- DESeq(dds, quiet = TRUE)
resultsNames(dds)

## extract results 
res <- data.frame(results(dds, name = "groupNofailure.tumorPurity")) # comparing no failure interaction term in ar interaction term
res$gene <- rownames(res)

## save
saveRDS(res,"Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/hmf_deseq_purity_nf_aq_deg.Rds")
res <- readRDS("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/hmf_deseq_purity_nf_aq_deg.Rds")

## volcano plot data set up 
volcano_data <- data.frame(row.names = rownames(res),
                           logFC = res$log2FoldChange,
                           negLogPadj = -log10(res$padj))
subset_data <- subset(volcano_data, negLogPadj > -log10(0.2))
threshold <- 1.0

## plot volcano plot
pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/volcano_plot_deseq2.pdf", height = 4, width = 4)
ggplot(volcano_data, aes(x = logFC, y = negLogPadj)) +
  geom_point(color = ifelse(abs(volcano_data$logFC) > threshold & volcano_data$negLogPadj > -log10(0.25), "red", "grey")) +
  xlim(c(-max(abs(volcano_data$logFC)), max(abs(volcano_data$logFC)))) +
  ylim(c(0, max(-log10(res$padj)))) +
  geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "red") +
  geom_hline(yintercept = -log10(0.25), linetype = "dashed", color = "red") +
  geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
  geom_text(data = subset_data, aes(label = rownames(subset_data)),
            hjust = 1, vjust = -0.4, size = 2.5, color = "black", check_overlap = T) +
  labs(x = "Log2 Fold Change", y = "-log10(Adjusted p-value)", title = "NF vs AR") +
  theme_bw()
dev.off()

## create msigdb objects
msigdb_reactome <- msigdbr(species = "human", category = "C2")
msigdb_reactome <- msigdb_reactome[grepl(c("REACTOME"), msigdb_reactome$gs_name),] # reactome

msigdb_H <- msigdbr(species = "human", category = "H") # hallmarks

## create pathways 
pathways_R <- split(x = msigdb_reactome$gene_symbol, f = msigdb_reactome$gs_name)
pathways_H <- split(x = msigdb_H$gene_symbol, f = msigdb_H$gs_name)

## pull genes
genes <- res %>% pull(stat, gene) %>% sort(decreasing = T)

## pathway enrichment
fgsea_R_nf_ar <- fgsea::fgseaSimple(pathways = pathways_R, stats = genes, nperm = 100000)
fgsea_H_nf_ar <- fgsea::fgseaSimple(pathways = pathways_H, stats = genes, nperm = 10000)

##
## leading edge ifng
saveRDS(fgsea_H_nf_ar, "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/fgsea_hmf_H_cancer.Rds")
saveRDS(fgsea_R_nf_ar, "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/fgsea_hmf_R_cancer.Rds")

# format 
fgsea_H_nf_ar$type <- "NFvsAR"
fgsea_R_nf_ar$type <- "NFvsAR"

## signficant only
fgsea_R <- fgsea_R[fgsea_R$padj < 0.1, ]
fgsea_H_nf_ar <- fgsea_H_nf_ar[fgsea_H_nf_ar$padj < 0.1, ]

## gprofiler significant genes
## overrepresentation analysis 
genes_up_NF <- res[res$padj < 0.1 & res$log2FoldChange > 0,]
go_nf <- gprofiler2::gost(genes_up_NF$gene, organism = "hsapiens", correction_method = "fdr")
go_nf <- go_nf$result[go_nf$result$p_value < 0.05,]
write_xlsx(data.frame(go_nf), "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/enriched_go_terms_nf_patients.xlsx")

################################################################################
## pr vs ar and nf ####
################################################################################
        
## relevel pr for comparison
meta_tme_scale$group <- as.factor(meta_tme_scale$group)
meta_tme_scale$group <- relevel(meta_tme_scale$group, ref = "Primary_Resistance")

## create deseq object with model design
dds <- DESeqDataSetFromMatrix(countData = counts,
                              colData = meta_tme_scale,
                              design = ~ group + tumorPurity + group:tumorPurity + APC_CELLS + NON_APC_CELLS + Endothelial + Fibroblasts)
## filtering low counts
keep <- rowSums(counts(dds) >= 10) >= 30
dds <- dds[keep,]
table(keep)

## run comparison  
dds <- DESeq(dds, quiet =TRUE)
resultsNames(dds)

## extract results - AR vs PR
res_ar_pr <- data.frame(results(dds, name = "groupAcq_Resistance.tumorPurity")) # comparing no failure interaction term in ar interaction term
res_ar_pr$gene <- rownames(res_ar_pr)

## pull genes
genes <- res_ar_pr %>% pull(stat, gene) %>% sort(decreasing = T)

## pathway enrichment
fgsea_R_ar_pr <- fgsea::fgseaSimple(pathways = pathways_R, stats = genes, nperm = 100000)
fgsea_H_ar_pr <- fgsea::fgseaSimple(pathways = pathways_H, stats = genes, nperm = 100000)

# format 
fgsea_H_ar_pr$type <- "ARvsPR"
fgsea_R_ar_pr$type <- "ARvsPR"

# signif only
fgsea_H_ar_pr <- fgsea_H_ar_pr[fgsea_H_ar_pr$padj < 0.1, ]

## extract results - NF vs PR
res_nf_pr <- data.frame(results(dds, name = "groupNofailure.tumorPurity")) # comparing no failure interaction term in ar interaction term
res_nf_pr$gene <- rownames(res_nf_pr)

## pull genes
genes <- res_nf_pr %>% pull(stat, gene) %>% sort(decreasing = T)

## pathway enrichment
fgsea_R_nf_pr <- fgsea::fgseaSimple(pathways = pathways_R, stats = genes, nperm = 10000)
fgsea_H_nf_pr <- fgsea::fgseaSimple(pathways = pathways_H, stats = genes, nperm = 10000)
fgsea_benci_nf_pr <- fgsea::fgseaSimple(pathways = benci_sig_list, stats = genes, nperm = 10000)

# signif only
fgsea_H_nf_pr <- fgsea_H_nf_pr[fgsea_H_nf_pr$padj < 0.1, ]

# format 
fgsea_H_nf_pr$type <- "NFvsPR"
fgsea_R_nf_pr$type <- "NFvsPR"

################################################################################
## combine results and plot
################################################################################

fgsea_res <- do.call(rbind, list(fgsea_H_nf_ar, fgsea_H_nf_pr, fgsea_H_ar_pr))
colnames(fgsea_res)
fgsea_res <- fgsea_res[,c("pathway","NES","type")]
data_wide =  spread(fgsea_res, type, NES)
data_wide <- column_to_rownames(data_wide,"pathway")
rownames(data_wide) <- gsub("HALLMARK_", "", rownames(data_wide))
data_wide <-  data_wide[order(-data_wide$ARvsPR), ]

saveRDS(fgsea_res,"Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/fgsea_H_groups_comparison_hmf.Rds")

pheatmap(as.matrix(data_wide), cluster_rows = F, cluster_cols = F, 
         color = colorRampPalette(rev(brewer.pal(n = 7, name = "RdBu")))(100),
         treeheight_col = 0, cutree_cols = 3, treeheight_row = 10,
         height = 5, width = 5)

#################
## exploring pdl1
#################

coef_dds_pld1 <- coef(dds, SE = F)
coef_dds_pld1 <- coef_dds_pld1[rownames(coef_dds_pld1) ==  "CD274",]

SE_dds_pld1 <- coef(dds, SE = T)
SE_dds_pld1 <-  SE_dds_pld1[rownames(SE_dds_pld1) ==  "CD274",]


int_ar = coef_dds_pld1[1]
int_nf = coef_dds_pld1[1] + coef_dds_pld1[3]
int_pr = coef_dds_pld1[1] + coef_dds_pld1[4]

coef_ar = coef_dds_pld1[5]
coef_nf = coef_dds_pld1[5] + coef_dds_pld1[11]
coef_pr = coef_dds_pld1[5] + coef_dds_pld1[12]

se_ar = SE_dds_pld1[5] 
se_nf = SE_dds_pld1[11]
se_pr = SE_dds_pld1[12]

regression_df <- data.frame(intercept = c(int_ar, int_nf),
                            coef = c(coef_ar, coef_nf),
                            group = c("Acq Resitance", "No Failure"),
                            lower = c(coef_ar - se_ar/2, coef_nf - se_nf /2),
                            upper = c(coef_ar + se_ar/2, coef_nf + se_nf /2),
                            pval = c(NA, round(res[res$gene == "CD274",]$pvalue, 3)))

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/pdl1_exp_acq_nf.pdf")
ggplot(regression_df, aes(x = factor(group), y = coef,ymin = lower, ymax = upper, color = factor(group), label = pval)) +
     geom_linerange(size = 1) +
     geom_point(size = 4) +
     geom_point(size = 2, color = "white") +
     coord_flip() +
     geom_label(nudge_y = 0.1) +
     viridis::scale_color_viridis(discrete = TRUE, direction = -1, begin = 0.2, end = 0.8, option = "plasma") +
     labs(x = "Grouping", y = "Cance Specific PDL1 Expression") +
     guides(color = "none") + theme_bw() 
dev.off()


x_ <- mean(c(coef_ar, coef_nf, coef_pr))
ss_b <- (16*(coef_ar - x_)**2) + (36*(coef_nf - x_)**2) + (44*(coef_pr - x_)**2)
ss_w <- (se_ar**(16-1)) + (se_nf**(36-1)) +(se_pr**(44-1))
df_b <- 3 - 1
df_w <- 96 - 3

F_STAT <- (ss_b / df_b) / (ss_w / df_w)

res_hmf <- readRDS("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/hmf_deseq_purity_nf_aq_deg.Rds")
res_hmf$data <- "hmf"
res_liu <- res_liu <- readRDS("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/liu_deseq_purity_nf_aq_deg.Rds")
res_liu$data <- "liu"

res_combined <- rbind(res_hmf, res_liu)
res_combined <- res_combined[res_combined$gene == "CD274", ]

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/pdl1_exp_acq_nf.pdf", height = 3, width = 4)
ggplot(res_combined, aes(x = log2FoldChange, y = data, fill = data)) +
  geom_bar(stat = "identity", color="black", position = position_dodge(width = 1, preserve = "single"), width = 0.7) +
  geom_text(aes(label = paste("p =", round(pvalue, 3))), hjust = -0.2, vjust = 0.5, size = 5) +  # Assuming p_value is the column name
  labs(x = "Log2FoldChange", y = "Dataset", fill ="Dataset") +
  ggtitle("PDL1 Expression:Acq Resistance vs No Failure") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5)) + 
  scale_fill_manual(values=c("#009E73", "#CC79A7"))
dev.off()

################################################################################

tmb <- read.delim("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/metadata/totMuts_sampleIDs.txt")                  
tmb_groups <- merge(meta_data, tmb, by.x = 0, by.y = "SampleID")
tmb_groups$log_TMB <- log10(tmb_groups$TMB)
tmb_groups$group <- factor(tmb_groups$group, levels = c("Primary_Resistance", "Acq_Resistance", "Nofailure"))
comp <- list(c("Acq_Resistance", "Nofailure"), c("Acq_Resistance", "Primary_Resistance"), c("Nofailure", "Primary_Resistance"))

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/tmb_groups_hmf.pdf", height = 3, width = 3)
ggplot(tmb_groups, aes(x=group, y = log_TMB, fill = group)) + geom_boxplot() + 
  stat_compare_means(comparisons = comp) + theme_classic() + 
  scale_fill_manual(values = pal_colors) + theme(legend.position = "none") + ylab("Log10(TMB)") + xlab("") +
  scale_x_discrete(labels=c("Primary Res","Acquired Res","Durable Rsp")) + geom_point()
dev.off()

################################################################################

clonal_hmf <- read_tsv("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/WORKING/inputs/dataset_metadata_supp_table3.tsv") 
clonal_hmf <- merge(tmb_groups, clonal_hmf, by.x = "Row.names", by.y = "sample_id")
clonal_hmf$group <- factor(clonal_hmf$group, levels = c("Primary_Resistance", "Acq_Resistance", "Nofailure"))

clonal_hmf$clonal_tmb = clonal_hmf$sbs_load.clonal + clonal_hmf$dbs_load.clonal + clonal_hmf$indel_load.clonal
clonal_hmf$subclonal_tmb = clonal_hmf$sbs_load.subclonal + clonal_hmf$dbs_load.subclonal + clonal_hmf$indel_load.subclonal
clonal_hmf$total_tmb = clonal_hmf$sbs_load + clonal_hmf$dbs_load + clonal_hmf$indel_load

clonal_hmf$p_clonal <- clonal_hmf$clonal_tmb / clonal_hmf$total_tmb
clonal_hmf$p_subclonal <- clonal_hmf$subclonal_tmb / clonal_hmf$total_tmb

comp <- list(c("Acq_Resistance", "Nofailure"), c("Acq_Resistance", "Primary_Resistance"), c("Nofailure", "Primary_Resistance"))

proportions_matrix <- cbind(clonal_hmf$p_clonal, clonal_hmf$p_subclonal)

# Function to calculate Shannon diversity index
shannon_index <- function(p) {
  # Ensure proportions sum to 1
  if (abs(sum(p) - 1) > 1e-6) {
    stop("Proportions must sum to 1.")
  }
  # Calculate Shannon diversity index
  H <- -sum(p * log2(p))
  return(H)
}

# Apply the Shannon index function to each sample (each row of the matrix)
clonal_hmf$diversity <- apply(proportions_matrix, 1, shannon_index)
ggqqplot(clonal_hmf[clonal_hmf$group == "Nofailure",]$p_clonal)

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/diversity_groups_hmf_violin.pdf", height = 3, width = 3)
ggplot(clonal_hmf, aes(x = reorder(group, p_clonal), y = p_clonal, color = group)) + 
  geom_point(position=position_jitter(width=0.1), alpha=0.5) +  # Adding jittered points for visibility
  theme_classic() + 
  ylab("Shannon Diversity Index") + 
  theme(legend.position = "none") +
  stat_compare_means(comparisons = comp, method = "t.test") +  stat_summary(
    geom = "crossbar",
    fun.y = "mean",
    col = "black",
    size = 0.3, width = 0.3) + scale_color_npg() + ggtitle("HMF") + 
  theme(axis.text.x = element_blank()) + xlab("Group")
dev.off()


p3 <- ggplot(clonal_hmf, aes(x=reorder(group,p_clonal), y = p_clonal, fill = group)) + geom_boxplot() + 
  stat_compare_means(comparisons = comp, method = "t.test") + theme_bw() + geom_point() +
  scale_fill_npg() + theme(axis.text.x =  element_blank()) + ylab("Shannon Diversity")
ggqqplot(clonal_hmf$p_clonal)

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/diversity_groups_hmf_violin.pdf", height = 3, width = 3)
ggplot(clonal_hmf, aes(x = reorder(group, diversity, median), y = diversity), fill = group) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_npg() +
  scale_color_npg() +
  stat_compare_means() +
  labs(title = "", x = "", y = "Shannon Diversity") +
  theme(legend.position = "none", axis.text.x = element_text(angle = 90,hjust = 1)) 
dev.off()

clonal_hmf$clonal_tmb <- log10(clonal_hmf$clonal_tmb)
clonal_hmf$subclonal_tmb <- log10(clonal_hmf$subclonal_tmb)

p1 <- ggplot(clonal_hmf, aes(x=group, y = subclonal_tmb, fill = group)) + geom_boxplot() + 
  stat_compare_means(comparisons = comp, method = "t.test") + theme_bw() +
  scale_fill_npg() + theme(axis.text.x =  element_blank()) + ylab("Subclonal TMB")

p2 <- ggplot(clonal_hmf, aes(x=group, y = clonal_tmb, fill = group)) + geom_boxplot() + 
  stat_compare_means(comparisons = comp,  method = "t.test") + theme_bw() +
  scale_fill_npg() + theme(axis.text.x =  element_blank()) + ylab("Clonal TMB")

pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/subclonal_clonal_tmb_hmf.pdf")
p1
p2
p3
dev.off()

clonal_hmf <- clonal_hmf[clonal_hmf$cancer_type_code == "",]


intersect(pathways_R[["REACTOME_ANTIGEN_PROCESSING_CROSS_PRESENTATION"]],
          fgsea_H_nf_ar$leadingEdge[[32]])


################################################################################

# Separate and sort data
nf <- clonal_hmf %>% filter(group == "Nofailure") %>% arrange(desc(clonal_tmb))
ar <- clonal_hmf %>% filter(group == "Acq_Resistance") %>% arrange(desc(clonal_tmb))

# Combine the sorted data back for plotting
sorted_data <- bind_rows(nf, ar) %>% 
  mutate(Patient_ID = factor(patientIdentifier, levels = patientIdentifier))

# log values
sorted_data$clonal_tmb_log <- log10(sorted_data$clonal_tmb)
sorted_data$subclonal_tmb_log <- log10(sorted_data$subclonal_tmb)

# Create the plot
ggplot(sorted_data, aes(x = Patient_ID)) +
  geom_bar(aes(y = clonal_tmb, fill = "clonal_tmb"), stat = "identity") +
  geom_bar(aes(y = subclonal_tmb, fill = "subclonal_tmb"), stat = "identity") +
  scale_y_continuous() +
  facet_wrap(~group, scales = "free_x", ncol = 2) +
  labs(y = "Number of Mutations", x = "Patient ID", fill = "Mutation Type") +
  theme_classic() +
  theme(axis.text.x = element_blank())

########

test <- read_xlsx("C:/Users/egand/Downloads/aad0501_table_s7.xlsx", col_names = F)
gene_set <- list(mitf=test$...1, axl=test$...2)
fgsea_test <- fgsea::fgseaSimple(pathways = gene_set, stats = genes, nperm = 10000)


test <- res[res$padj < 0.25,]
write.csv(test, "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/diff_genes_ar_dr.csv")


gene_set <- read.delim("C:/Users/egand/Downloads/mitf_gene_set.txt", header = F)
pathways_H <- list(MITF = gene_set$V1)


#######

data_frames <- list(
  "dr_ar" = fgsea_H_nf_ar,
  "ar_pr" = fgsea_H_ar_pr,
  "dr_pr" = fgsea_H_nf_pr
)

# Create a new workbook
wb <- createWorkbook()

# Add each data frame to a separate sheet
for (sheet_name in names(data_frames)) {
  addWorksheet(wb, sheet_name) # Add a worksheet
  writeData(wb, sheet_name, data_frames[[sheet_name]]) # Write the data frame
}

# Save the workbook
saveWorkbook(wb, "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/enriched_pathways_pairwise/hmf/gsea_results.xlsx", overwrite = TRUE)
