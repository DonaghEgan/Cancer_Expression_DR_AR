# library
library(DESeq2)
library(tidyverse)
library(msigdbr)
library(fgsea)

## Set the working directory
setwd("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT")

## load data 
counts <- readRDS("counts.Rds")
meta_data <- readRDS("meta_data_v2.Rds")
consensus_tme <- data.frame(t(readRDS("consensus_TME.Rds")))

## unify meta and counts 
common_samples <- intersect(rownames(meta_data), colnames(counts))
counts <- counts[,colnames(counts) %in% common_samples]
meta_data <- meta_data[rownames(meta_data) %in% common_samples,]

## collapse covariates  
APC_CELLS <- c("Dendritic_cells" , "Monocytes","B_cells", "Macrophages",  "Macrophages_M1", "Macrophages_M2")
NON_APC_CELLS <- c("Cytotoxic_cells", "Eosinophils", "Mast_cells", "NK_cells","Neutrophils", "T_cells_CD4", "T_cells_CD8", "T_cells_gamma_delta", "T_regulatory_cells", "Plasma_cells")

consensus_tme$APC_CELLS <- rowMeans(consensus_tme[, APC_CELLS, drop=FALSE]) 
consensus_tme$NON_APC_CELLS <- rowMeans(consensus_tme[, NON_APC_CELLS, drop = FALSE]) 

## add tme to meta data 
meta_tme <- merge(consensus_tme, meta_data, by = 0) %>% column_to_rownames("Row.names")

meta_tme_scale <- scale(meta_tme[,c(1:21,48), drop=F])
meta_tme_scale <- merge(meta_tme_scale, meta_tme[,"FirstIOResNoR", drop =F], by =0) %>% column_to_rownames("Row.names")

## create deseq object with model design
dds <- DESeqDataSetFromMatrix(countData = counts,
                              colData = meta_tme_scale,
                              design = ~ FirstIOResNoR + tumorPurity + FirstIOResNoR:tumorPurity + APC_CELLS + NON_APC_CELLS + Endothelial + Fibroblasts)

## filtering low counts
keep <- rowSums(counts(dds) >= 10) >= 50
dds <- dds[keep,]
table(keep)

## run comparison  
dds <- DESeq(dds, quiet =TRUE)
resultsNames(dds)

# extract results and save
res <- data.frame(results(dds, name = "FirstIOResNoRResponse.tumorPurity"))
res$gene <- rownames(res)
saveRDS(res,"Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/hmf_deseq_purity_nf_aq_deg.Rds")

# perform fgsea
msigdbr_df <- msigdbr(species = "human", category = "H")
pathways = split(x = msigdbr_df$gene_symbol, f = msigdbr_df$gs_name)
genes <- res %>% pull(stat, gene) %>% sort(decreasing = T)
fgseaRes <- fgsea::fgseaSimple(pathways = pathways, stats = genes, nperm = 1000000)

# volcano plot data set up 
volcano_data <- data.frame(row.names = rownames(res),
                           logFC = res$log2FoldChange,
                           negLogPadj = -log10(res$padj))
subset_data <- subset(volcano_data, negLogPadj > -log10(0.25))
threshold <- 1.0

# plot volcano plot
pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/volcano_plot_deseq2.pdf", height = 4, width = 4)
ggplot(volcano_data, aes(x = logFC, y = negLogPadj)) +
  geom_point(color = ifelse(abs(volcano_data$logFC) > threshold & volcano_data$negLogPadj > -log10(0.25), "red", "grey")) +
  xlim(c(-max(abs(volcano_data$logFC)), max(abs(volcano_data$logFC)))) +
  ylim(c(0, max(-log10(res$padj)))) +
  geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "red") +
  geom_hline(yintercept = -log10(0.25), linetype = "dashed", color = "red") +
  geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
  geom_text(data = subset_data, aes(label = rownames(subset_data)),
            hjust = 1, vjust = -0.4, size = 2.5, color = "black", check_overlap = T) +
  labs(x = "Log2 Fold Change", y = "-log10(Adjusted p-value)", title = "NF vs AR") +
  theme_bw()
dev.off()


# select pathways - plotting 
tumor_pathways  <- fgseaRes[c(332,853,778,98,771,706,770,1551), ]
tumor_pathways$pathway <- gsub("REACTOME_", "", tumor_pathways$pathway)
tumor_pathways$log10padj <- -log10(tumor_pathways$padj) 

# plot results 
pdf("/figures/hmf_nf_acq_resistance_deseq.pdf", height = 4, width = 9)
ggplot(tumor_pathways, aes(x = NES, y = reorder(pathway, NES), fill = log10padj)) +
  geom_bar(stat = "identity") +
  labs(x = "Normalized Enrichment Score (NES)", y = "Pathway", fill = "-log10 adj pval") +
  ggtitle("GO BP enrichment: Acq Resistance vs No Failure") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5)) + 
  viridis::scale_fill_viridis(discrete = FALSE, direction = -1, option = "D") +
  xlim(-2.5, 2.5)
dev.off()


##
counts_tme <- merge(t(log2(counts + 1)), meta_tme_scale, by=0)

counts_tme_nf <- counts_tme[counts_tme$group %in% c("Nofailure", "Acq_Resistance"),]
counts_tme_ar <- counts_tme[counts_tme$group %in% c("Acq_Resistance"),]

cor(counts_tme$tumorPurity, counts_tme$MCHR1)
plot(counts_tme_ar$APC_CELLS, counts_tme_ar$RNR1)

counts_tme_nf$Fibroblasts <- as.numeric(counts_tme_nf$Fibroblasts)
counts_tme_nf$group <- as.factor(counts_tme_nf$group)

ggplot(counts_tme_nf, aes(x=tumorPurity, y=MCHR1, fill=group, color=tumorPurity)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) + theme_bw()

counts_tme_nf$group <- factor(counts_tme_nf$group)
counts_tme_nf$tumorPurity <- as.numeric(counts_tme_nf$tumorPurity)

nf_sox11 <- lm(MCHR1 ~ group + tumorPurity + group:tumorPurity + APC_CELLS + NON_APC_CELLS + Endothelial + Fibroblasts, data = counts_tme)
summary(nf_sox11)
nf_sox11 <- broom::tidy(nf_sox11)
write.csv(nf_sox11, file = "Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/sox11_coef_model.csv")


pdf("Z:/working/GEL_MELANOMA/External_Datasets/HMF_GCP/RNA_seq_processed/OUTPUT/figures/sox11_example.pdf", height = 5, width = 5)
ggplot(counts_tme_nf, aes(x = tumorPurity, y = MCHR1, fill = group)) +
  geom_point(aes(color = group, size = tumorPurity, alpha =.7)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_bw() + scale_color_nejm()
dev.off()

test <- coef(dds)
test <- test[,c(5:9)]
library(GSVA)
COEF_EN <- gsva(as.matrix(test), pathways, method = "ssgsea")
pheatmap::pheatmap(t(COEF_EN), scale = "row")


## overrepresentation analysis 
genes_up_NF <- res[res$padj < 0.25 & res$log2FoldChange > 0,]
genes_up_AR <- res[res$padj < 0.25 & res$log2FoldChange < 0,]

go_nf <- gprofiler2::gost(genes_up_NF$gene, organism = "hsapiens", correction_method = "fdr")
